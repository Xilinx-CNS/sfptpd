.Dd January 24, 2025
.Os
.Dt sfptpd 8 SMM
.Sh NAME
.Nm sfptpd
.Nd Solarflare Enhanced PTP Daemon
.Sh SYNOPSIS
.Nm
.Op Fl -help
.Nm
.Op Fl -version
.Nm
.Op Fl -test-config
.Nm
.Op Fl v
.Op Fl i Ar default-interface
.Op Fl D Ar default-ptp-domain
.Op Fl f Ar sfptpd.conf
.Op Fl u Ar user[:group]
.Op Fl p Ns Op priv-helper-path
.Op Fl -no-daemon | -daemon
.Op Fl -console
.Sh DESCRIPTION
Start the Solarflare Enhanced PTP Daemon to manage the synchronisation of
system and PTP hardware clocks, remote PTP sources and sinks, external
PPS time sources and locally-running NTP clients.
.Pp
Most of the configuration for sfptpd is provided in an ini-style
configuration file.
The aspects of configuration that are made available on the command line
are either especially helpful for experimental use when testing sfptpd
or administering a system or are useful for an init system to override
settings to be compatible with the applicable mode of supervision and logging.
.Ss Theory of Operation
.Pp
A typical sfptpd topology looks as follows, where three network cards
with PTP Hardware Clock devices and the system clock are synchronised to a
remote time source such as via PTP.
.Bd -literal
              +---------+
              |remote   | reference clock
              |time     |
              |source   |
              +----+----+
                   |
                   v
              +---------+
              |NIC clock| local reference clock
       +------+(phcA)   +-------+
       |      +----+----+       |
       |           |            |
       v           v            v
   +-------+  +---------+  +---------+
   |system |  |NIC clock|  |NIC clock|
   |clock  |  |(phcB)   |  |(phcC)   |
   +-------+  +---------+  +---------+
.Ed
.Pp
At startup
.Nm
constructs a sync network as shown above.
The structure of this network adapts through the lifetime of the daemon
and is based on the following factors:
.Bl -bullet
.It
The configuration of
.Sx "SYNC MODULES"
and sync instances.
.It
The daemon's discovery of network interfaces with PTP hardware clock (phc)
devices and hotplugging thereof.
.It
The daemon's selection of the best reference clock and therefore local
reference clock, based on the configured selection policy.
.El
.Ss Monitoring
There are multiple means of monitoring
.Nm ,
each suited to different purposes:
.Bl -bullet
.It
.Sy Long term stats .
Mean, min, max, standard deviation and various counters are stored in
.Pa /var/lib/sfptpd/stats-*
files aggregated over the current and last three full periods of minute,
ten minutes, hour, day and week.
Always enabled.
JSON-formatted versions of the same files are also saved.
.It
.Sy Stats log .
Per-second human-readable stats output for each sync relationship,
controlled by
.Ql stats_log .
.It
.Sy Real time stats .
Stats emitted for every computed offset sample in JSON lines format to a file
controlled by
.Ql json_stats .
.It
.Sy PTP event monitoring .
PTP event monitoring messages defined in IEEE Std 1588-2019 section 16.11
can be emitted under the control of various
.Ql mon_*
options.
These are likely to be useful in debugging scenarios and do not offer the
kind of capability useful for generalised sync monitoring.
The
.Nm sfptpmon
script provided with
.Nm
is an example of how these messages may be consumed.
The built-in capability of
.Nm
to receive these messages is deprecated in favour of the script and likely
to be removed in a future version.
.It
.Sy NetSync Monitor .
External monitoring of PTP sync may be achieved with the
.Sq Reverse PTP
technique, enabled with the
.Ql mon_meinberg_netsync
option.
.It
.Sy OpenMetrics stats .
.Nm
can directly serve statistics in the
.Sq OpenMetrics
exposition format over HTTP.
This can be enabled by default using a Unix socket which can be converted
to a TCP service using an external tool like
.Xr socat 1
or the
.Xr nginx 8
web server.
For example:
.Dl socat TCP-LISTEN:9979,fork UNIX-CONNECT:/run/sfptpd/metrics.sock
Alternatively, stats can be exported directly over TCP with, for example:
.Ql openmetrics_tcp 127.0.0.1:9979
.El
.Sh SYNC MODULES
A subsystem within
.Nm
for a particular remote synchronisation method is known as a
.Sq sync module
.No .
Sync modules must be instantiated as a
.Sq sync instance
or multiple sync instances where relevant to that type of sync module.
These are declared in the general configuration section thus:
.Pp
.Bd -literal
[general]
sync_module ptp ptp1 ptp2
sync_module freerun fr1
.Ed
.Pp
Having been declared as above, sync instances may be configured with their own
configuration section by name.
Options which are global to a sync module or are to be repeated for each sync
instance may be specified in a section under the name of the sync module
itself.
For example:
.Pp
.Bd -literal
[ptp]
transport ipv6

[ptp1]
interface eth0

[ptp2]
interface eth1
.Ed
.Ss The PTP sync module
The PTP sync module can create one or more PTP Ports operating as
Ordinary Clocks, each performing the role of a PTP Slave or PTP Master
and participating in PTP Networks on different or the same network links
or bonds and in different or the same PTP Domains, subject to
constraints.
.Ss The PPS sync module
The PPS sync module synchonises the time on a local NIC clock to an
external PPS source connected to the PPS input on that NIC.
PPS provides sub-second synchronisation but requires an additional time source
to define the time of day.
This is typically provided by the NTP sync module but can also be source from
a PTP sync instance using the
.Sq time_of_day
option.
.Ss The Freerun sync module
The Freerun sync module allows the system or a local NIC clock to be defined
as an explicit time source.
Use cases for the freerunning module include:
.Bl -bullet -compact
.It
Pinning down fallback behaviour when an active sync source is not available.
.It
In combination with the
.Sq clock_readonly
and
.Sq priority
options to benefit from additional sfptpd functionality when another daemon is
handling synchronisation to a remote clock.
.El
.Ss The NTP sync module
The NTP sync module monitors and potentially controls an external NTP daemon
either as a time-of-day source for PPS or, typically, a fallback time source
should preferred PTP or PPS sources fail.
.Sh CONSIDERATIONS
.Ss Running multiple instances
.Nm
is designed to use a single process to control multiple sources and sinks
across different PTP domains and synchronisation technologies. However, in
some circumstances, such as for debugging, diagnostics, monitoring or to
partition the time domains within a host, it may be required to run multiple
instances.
The lock file
.Ql kernel_clock
is used by default to ensure only one instance of
.Nm
or ptpd is running simultaneously.
The
.Ql lock off
option can be used to disable this lock.
If multiple instances are in operation in the same host then the following
additional options should be considered:
.Bl -bullet -compact
.It
.Ql state_path
.It
.Ql control_path
.It
.Ql unique_clockid_bits
.El
The list of clocks that are controlled by the different instances should also
be partitioned using
.Ql clock_list
or
.Ql clock_readonly
.
.Sh FILES
.Bl -tag -width /etc/sfptpd.conf
.It Pa /etc/sfptpd.conf
typical configuration file
.It Pa /var/lib/sfptpd
location of files giving instantaneous sfptpd status, long term
statistics and diagnostics
.It Pa /run/kernel_clock
lock file preventing multiple instances of
.Nm
and ptpd running unintentionally.
.It Pa /run/sfptpd/metrics.sock
stream socket serving OpenMetrics stats over HTTP
.It Pa /run/sfptpd/control-v1.sock
datagram socket accepting control packets from
.Nm sfptpdctl
.El
.Sh CONFORMING TO
The PTP sync module implements IEEE Std 1588-2008 and IEEE Std 1588-2019.
.Pp
The following profiles are supported:
.Bl -bullet -compact
.It
Delay Request-Response Default PTP Profile
.It
Peer-to-Peer Delay Request-Response Default PTP Profile
.It
Enterprise Profile (draft)
.Aq https://datatracker.ietf.org/doc/html/draft-ietf-tictoc-ptp-enterprise-profile-22
.El
.Pp
The following transports are supported:
.Bl -bullet -compact
.It
Annex C, UDP over IPv4
.It
Annex D, UDP over IPv6
.El
.Sh BUGS
Please raise bug reports at:
.Aq https://github.com/Xilinx-CNS/sfptpd/issues
.Pp
Support for users of AMD Solarflare NICs is available from:
.Aq support-nic@amd.com
.Pp
It is advisabled to include an archive of
.Pa /var/lib/sfptpd
and the current daemon configuration in any support request.
.Sh EXAMPLES
A selection of use cases is covered here.
An extensive set of examples may be found in
.Pa /usr/share/doc/sfptpd/config
.
.Pp
The examples below can be invoked by saving the given configuration in
.Pa /etc/sfptpd.conf
and running:
.Dl $ sfptpd -f /etc/sfptpd.conf
.Ss Simple PTP slave
.Bd -literal
[general]
sync_module ptp ptp1
message_log stderr
stats_log stdout

[ptp1]
interface eth0
.Ed
.Ss PPS receiver
In this example the clock characteristic of the PPS source are defined for
sync instance selection purposes because this information is not transmitted
on the wire.
.Pp
A freerunning interface is specified to be explicit about the intended fallback
behaviour and given the same priority as the PPS instance, which will win when
operating correctly due to its defined characteristics but a greater priority
than the NTP instance.
This is a choice preferring the stability of the NIC clock in holdover, which
over a short period is likely to be more significant than the drift due to its
holdover characteristics.
.Bd -literal
[general]
sync_module pps pps1
sync_module freerun fr1
sync_module ntp ntp1

[pps1]
interface eth1
master_clock_class locked
master_time_source gps
master_accuracy 100
priority 10

[fr1]
interface eth1
priority 10

[ntp]
ntp_key 8 MySharedKey
priority 20
.Ed
.Sh AUTHORS
Advanced Micro Devices, Inc.
.Nm
is built around
.Nm ptpd2
version 2.3.0, which provides the core engine for the PTP sync module
and has been substantially extended and modified.
See
.Xr ptpd2 8
for authorship.
.Sh SEE ALSO
.Xr sfptpdctl 8 ,
.Xr sfptpmon 8 ,
.Xr tstool 8 .
.Pp
This man page is a basic summary of the operation of
.Nm
.Pp
A comprehensive summary of available
.Nm
configuration stanzas can be generated with:
.D1 $ sfptpd --help
Full documentation is available at:
.Aq https://docs.amd.com/r/en-US/ug1602-ptp-user
.Sh COPYRIGHT
Copyright (c) 2022-2025 Advanced Micro Devices, Inc.
