#
# Configuration showcasing various configuration options for sfptpd.
# This file is not itself expected to provide a useful setup and may
# enable mutually incompatible options.
#
# SPDX-License-Identifier: BSD-3-Clause
# (c) Copyright 2012-2019 Xilinx, Inc.
#

#
# Generic Configuration
#
[general]

# Create instances of Synchronizatoin Modules.
sync_module ptp ptp1
sync_module pps pps1

# Specify whether messages are sent to the syslog, stderr or to a file. By default
# messages are sent to stderr.
message_log syslog

# Specify whether stats logging is enabled and whether stats are sent to stdout
# or to a file
stats_log off

# Enable output of machine-readable statistics in JSON-lines format (http://jsonlines.org).
json_stats /tmp/sfptpd_stats.jsonl

# Configure sfptpd to run as a daemon. NB: enabling this when running systemd
# will cause systemd to terminate sfptpd!
daemon

# whether to use a lock file to stop multiple simultaneous instances of the
# daemon. Enabled by default.
lock off

# Specify how the clocks are controlled. By default clocks are stepped and
# slewed as necessary. Possible values are:
#    slew-and-step     Allow clock stepping as required
#    step-at-startup   Only allow the clock to be stepped at startup
#    no-step           Never step the clock
#    no-adjust         Do not make any adjustment to the clocks
#    step-forward      Only step the clock forward
clock_control slew-and-step

# Specify whether to guard against NIC clock resetting to epoch. By default the
# system clock stops syncing to the NIC clock when the NIC clock's time is near
# epoch. Possible values are:
#    alarm-only        Only raise an alarm when the NIC clock is near epoch.
#                      Does not stop system clock from being synchronized to NIC
#                      clock.
#    prevent-sync      Raises an alarm and stops the system clock from being
#                      synchronized to the NIC clock when the NIC clock is near
#                      epoch.
#    correct-clock     Raises an alarm and sets the NIC clock to the system clock.
epoch_guard prevent-sync

# Specifies whether to use saved clock frequency corrections when disciplining
# clocks. Enabled by default.
persistent_clock_correction on

# Specifies set of clocks that should be disciplined. Specify by clock name or
# MAC address or clock ID or interface name. By default, all clocks are disciplined.
# When specifying interface names make sure to include all interfaces linked to
# the same clock.
clock_list phc0 00:0f:53:01:7b:fc 000f:53ff:fe01:98ac ens1f0 ens1f1

# Specifies set of interfaces on which general receive packet timestamping should
# be enabled. Specify by interface name or MAC address or use * to enable receive
# timestamping on all interfaces that support it.
timestamping_interfaces 00:0f:53:01:7b:fc eth33 *

# Specifies whether to disable timestamping on exit. This affects all interfaces
# specified with timestamping_interfaces as well as the interface selected for PTP.
# The default setting is on.
timestamping_disable_on_exit on

# Specifies whether to attempt using hardware timestamps on non-Xilinx
# hardware. Its driver must support raw hardware timestamps and expose a PHC
# device adjustable via clock_adjtime (adjtimex).
non_xilinx_nics off

# Sets the convergence threshold in ns, the maximum offset between the system clock
# and NIC clocks over a 60s period to be considered in sync. The default is 1000.
local_sync_threshold 1000.0

# Use automatic (default) or manual sync instance switching. Manual switching is
# accomplished through the sfptpdctl program.  The default setting is automatic.
selection_policy automatic

# Specify an alternative ordering of rules for the selection policy.
selection_policy_rules manual state no-alarms user-priority clock-class total-accuracy allan-variance steps-removed

# When using automatic selection, specifies the how long the daemon will wait
# after detecting a better instance before switching to it. This feature is used
# to avoid rapid switching between instances where there are multiple instances
# with similar characteristics. The default is 10 seconds. Use a value of 0 to
# disable the feature.
selection_holdoff_interval 10

# By default the daemon will auto-detect interface hotplug insertion and removal
# events using Netlink and bond status changes additionally by regular polling.
# The deamon will either initialise or delete interface objects as necessary.
# Alternative detection modes are 'netlink' to avoid polling bonds for changes
# and rely only on Netlink events and 'manual' which causes no detection to be
# performed. In 'manual' mode users must use the sfptpdctl application to inform
# the daemon which physical interfaces should be used.
hotplug_detection_mode netlink-and-probe

# Configure the secondary servo PID filter proportional and integral term
# coefficients. The default values are 0.04 for the proportional coefficient and
# 0.03 for the integral coefficient.
pid_filter_p 0.4
pid_filter_i 0.03

# Specifies the trace level if the application has been built with trace enabled.
# Default is 0, no trace.
trace_level 0

#
# Generic PTP Configuration
#
[ptp]

# Specify the interface to use.
interface eth0

# Enable logging of PPS measurements and set the PPS propagation delay
ptp_pps_log
pps_delay 0

# Configure PTP management message support. Disabled by default. Possible
# values are:
#    disabled   Management messages disabled
#    read-only  Only requests to read information (GET) will be accepted
ptp_mgmt_msgs disabled

# The maximum number of foreign master records a node is enable to store
# simultaneously.
ptp_max_foreign_records 16

#
# PTP Instance Configuration
#
[ptp1]

# Specify PTP Slave mode
ptp_mode slave

# Enable dump of each received PTP packet in detail - produces lots of output!
ptp_pkt_dump

# TX and RX transmission latencies in nanoseconds - use to correct for network
# asymmetry.
ptp_tx_latency 0
ptp_rx_latency 0

# Specify the PTP delay mechanism - end-to-end or peer-to-peer
ptp_delay_mechanism end-to-end

# Specify the PTP network mode - conventional multicast or hybrid
ptp_network_mode hybrid

# Multicast TTL value. Default is 64.
ptp_ttl 64

# Configures how PTP handles the UTC offset valid flag. The specification is
# ambigious in its description of the meaning of the UTC offset valid flag
# and this has resulted in varying different implementations. In most
# implementations, if the UTC offset valid flag is not set then the UTC offset
# is not used but in others, the UTC offset valid is an indcation that the
# master is completely confident that the UTC offset is correct. Various
# options are supported:
#    default  If UTCV is set use the UTC offset, otherwise do not use it
#    ignore   Do not used the UTCV flag - always apply the indicated UTC offset
#    prefer   Prefer GMs that have UTCV flag set above those that don't
#    require  Do not accept GMs that do not set UTCV
ptp_utc_valid_handling default

# Use to modify the PTP domain in the range 0..255. Default is 0.
ptp_domain 0

# Sets the convergence threshold in ns, the maximum offset from the clock
# source over a 60s period to be considered in sync. The default is 1000 or
# 100000 if software timestamping is in use.
sync_threshold 1000.0

# Access Control Lists
# This feature restricts the set of network addresses from which PTP will listen
# to timing and management messages. The control uses an allow and deny list
# and the option to specify the order in which the lists are evaluated. There are
# separate controls for timing and management messages.
# Each list should be a series of network address in the format a.b.c.d/x where
# a.b.c.d specifies the subnet and x the mask - to specify a single IP address
# a mask of 32 should be specified.
# When enabled, each time that a PTP message is received, the source IP address
# of the incoming message is matched against the allow and deny lists. The second
# list in the ordering creates exceptions for the first list and the default
# action is the opposite of the first list type.
# The network addresses in each list should be separated with spaces or commas e.g.
#       192.168.1.0/24 192.168.4.0/24 172.10.11.1/32 or
#       192.168.1.0/24,192.168.4.0/24,172.10.11.1/32
#
ptp_timing_acl_allow 172.16.128.48/32 172.16.128.47/32
ptp_timing_acl_deny 172.16.128.0/21
ptp_timing_acl_order deny-allow

ptp_mgmt_acl_allow 10.10.1.1/32 10.12.1.0/24
ptp_mgmt_acl_deny 172.0.0.0/8
ptp_mgmt_acl_order allow-deny

# The Announce receipt timeout in multiples of the announce interval.
ptp_announce_timeout 6

# The Sync Packet receipt timeout in multiples of the sync packet interval.
ptp_sync_pkt_timeout 6

# The Delay Request in interval in 2^number seconds. If specified for a
# PTP slave, this overrides the value communicated to the slave from the
# master.
ptp_delayreq_interval 0

# The Delay Response receipt timeout 2^number seconds. Default is -2 (250ms).
ptp_delayresp_timeout -2

# Set PTPD debug message level. Defaults to 0 (off).
ptp_trace 0

#
# Generic PPS Configuration
#
[pps]

# Set the sync instance to use for a time-of-day source explicitly. Defaults to
# the NTP sync instance unless chronyd is detected running at startup.
time_of_day ntp1

#
# PPS Instance Configuration
#
[pps1]

# Specify the clock to use as local reference by interface. Can also be specified
# on the command line using the -i option.
# interface eth1

# Define the characteristics of the master clock so that sfptpd can make the
# correct decision about which sync instance to select. Without setting these
# values sfptpd will assume the worse and would not select the PPS sync instance
# over another un-alarmed instance in the slave state if the automatic selection
# policy is in use. These should be set if known and will be passed on to slaves
# (with additional inaccuracy) if also operating as a PTP master.
master_clock_class locked
master_time_source gps
master_accuracy 100

# Gives the PPS sync instance a user priority to ensure it is selected in
# preference to the NTP sync instance when PPS is working and if the automatic
# selection policy has been configured.
priority 10

# Set PPS propagation delay
pps_delay 0

# Specifies filter type to use to reject outliers. Default is to use 'std-dev'
# i.e. based on a sample's distance from the mean expressed as a number of
# standard deviations.
outlier_filter_type disabled

# Number of data samples stored in the filter. For std-dev type the valid
# range is [5,60] and the default is 30.
outlier_filter_size 30

# Controls how outliers are fed into the filter, specified in the range [0,1].
# A value of 0 means that outliers are not fed into filter (not recommended)
# whereas a value of 1 means that each outlier is fed into the filter
# unchanged. Values between result in a portion of the value being fed in.
# The default value is 1.
outlier_filter_adaption 1.0

# Sets the convergence threshold in ns, the maximum offset from the clock
# source over a 60s period to be considered in sync. The default is 1000.
sync_threshold 1000.0

# Configure the PPS PID filter proportional and integral term coefficients. The
# default values are 0.05 for the proportional coefficient and 0.001 for the
# integral coefficient.
pid_filter_p 0.05
pid_filter_i 0.001

# Configure the PTP FIR filter size. The default size is 4.
fir_filter_size 4

#
# NTP Configuration
#
[ntp1]

# Specifies how often the NTP daemon will be polled in seconds. The default is 1.
ntp_poll_interval 1

# Specifies the ID and the value of shared key ID and value to use to
# authenticate control requests with the NTP daemon. The key ID is an integer and
# the key value is a plaintext ascii string up to 31 characters long i.e. an "m"
# key as defined by NTPd. The key ID must be identified in the NTP configuration
# file in the trustedkey and requestkey (mode7) / controlkey (mode6) lists and the
# key itself must appear in the /etc/ntp/keys file.
ntp_key 8 MySharedNTPDaemonKey

# Set a priority for this sync instance.
priority 20

# fin
