#
# Example configuration for sfptpd operating as a boundary clock on a
# PTP domain between two networks
#
# This is an experimental use case, and while adequate for test use, may not
# model all the behaviour expected of a boundary clock
#
# SPDX-License-Identifier: BSD-3-Clause
# (c) Copyright 2012-2022 Xilinx, Inc.
#

#
# Generic Configuration
#
[general]

# Create PTP Synchronization Module instances.
sync_module ptp ptps ptpm

# Specify whether messages are sent to the syslog, stderr or to a file. By default
# messages are sent to stderr.
# message_log /local/sfptpd_msgs.txt
message_log stderr

# Specify whether stats logging is enabled and whether stats are sent to stdout
# or to a file
# stats_log /local/sfptpd_stats.txt
stats_log stdout

# Specifies whether to attempt using hardware timestamps on non-Xilinx
# hardware. Its driver must support raw hardware timestamps and expose a PHC
# device adjustable via clock_adjtime (adjtimex).
non_xilinx_nics off

#
# PTP Master Configuration
#
[ptpm]

# Specify PTP Master mode
ptp_mode master

# Specify the interface to use.
interface eth2

#
# PTP Slave Configuration
#
[ptps]

# Specify PTP Slave mode
ptp_mode slave

# Specify the interface to use.
interface eth1

# TX and RX transmission latencies in nanoseconds - use to correct for network
# asymmetry.
ptp_tx_latency 0
ptp_rx_latency 0

#
# PTP Generic Configuration
#
[ptp]

# Use to modify the PTP domain in the range 0..255. Default is 0.
ptp_domain 101

# Enable dump of each received PTP packet in detail - produces lots of output!
# ptp_pkt_dump

# Enable logging of PPS measurements
# ptp_pps_log

# Specify the PTP delay mechanism - end-to-end or peer-to-peer
# ptp_delay_mechanism end-to-end

# Specify the PTP network mode - conventional multicast or hybrid
ptp_network_mode hybrid

# Multicast TTL value. Default is 64.
# ptp_ttl 64

# fin
